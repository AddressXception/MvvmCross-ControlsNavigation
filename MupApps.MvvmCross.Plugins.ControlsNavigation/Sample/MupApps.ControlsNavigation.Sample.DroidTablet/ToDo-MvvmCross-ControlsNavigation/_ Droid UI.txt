The steps to get this plugin on Droid UI working are:

1. Override the CreateViewPresenter method on your Setup.cs file:

		protected override IMvxAndroidViewPresenter CreateViewPresenter()
		{
			var viewPresenter = base.CreateViewPresenter();
			return new MvxAndroidControlPresenter(viewPresenter);
		}

2. Add a new class to the Controls folder and Inherit from MvxAndroidControl, 
	with the same name of the ViewModel but ending in Control (Ex: SecondViewModel -> SecondControl)

3. Inflate the view with your layout on the constructor:

	SetContentView(Resource.Layout.YourControlLayout);

4. Add the user control to one of your Views that is already binded with a ViewModel (Ex: FirstView). 
	On your view axml:

		<YourNamespace.Controls.YourControl
			android:layout_height="fill_parent"
			android:layout_width="0dp"
			android:layout_weight="1" />
 
 5. Call the ShowViewModel method from the container view's ViewModel and the control will do its job!

 You can check a working sample here:
 https://github.com/ChristianRuiz/MvvmCross-ControlsNavigation/tree/v1/MupApps.MvvmCross.Plugins.ControlsNavigation/Sample/MupApps.ControlsNavigation.Sample.DroidTablet
